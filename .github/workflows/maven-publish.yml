# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created]

jobs:
  check-updated-services:
    runs-on: ubuntu-latest
    outputs:
      services-names: ${{ steps.check-updates.outputs.modified_services_json }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in service directories
        id: check-updates
        run: |
          echo "Checking for changes in service directories..."
          modified_services=()
          for dir_path in ./*; do
            service=$(basename "$dir_path")
            if [[ -d $service && $service == eos-* ]]; then
              if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^$service/"; then
                echo "$service was modified"
                modified_services+=($service)
              fi
            fi
          done

          MODIFIED_SERVICES_MATRIX=$(echo "[\"$(echo ${modified_services[*]} | sed 's/ /\", \"/g')\"]")
          modified_services_json='{ "modified_services": '$MODIFIED_SERVICES_MATRIX' }'
          echo "modified_services_json=$modified_services_json" >> $GITHUB_OUTPUT


  build:
    needs: check-updated-services
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix: ${{ fromJson(needs.check-updated-services.outputs.services-names) }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=eos-az_eos-azure -DskipTests
      working-directory: ${{ github.workspace }}/${{ matrix.modified_services }}

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DskipTests
      env:
        GITHUB_TOKEN: ${{ github.token }}
      working-directory: ${{ github.workspace }}/${{ matrix.modified_services }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ramzi123
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v6
      with:
        context: ${{ github.workspace }}/${{ matrix.modified_services }}
        file: ${{ github.workspace }}/${{ matrix.modified_services }}/Dockerfile
        push: true
        tags: ramzi123/${{ matrix.modified_services }}:latest

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push to GitHub Container Registry
      uses: docker/build-push-action@v6
      with:
        context: ${{ github.workspace }}/${{ matrix.modified_services }}
        file: ${{ github.workspace }}/${{ matrix.modified_services }}/Dockerfile
        push: true
        tags: ghcr.io/neifar/${{ matrix.modified_services }}:latest

